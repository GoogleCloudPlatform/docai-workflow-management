# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: 'download looker jar'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args: ['-c','apt update && apt install -y jq && ./download_looker_jars.sh && ./determine_latest_tag.sh']
    env:
      - 'LOOKER_TECHNICAL_CONTACT_EMAIL=${_LOOKER_TECHNICAL_CONTACT_EMAIL}'
      - 'LOOKER_VERSION=${_LOOKER_VERSION}'
      - 'REGISTRY_PATH=${_REGISTRY_PATH}'
      - 'IMAGE_NAME=${_IMAGE_NAME}'
    secretEnv:
      - LOOKER_LICENSE_KEY
    dir: '${_WORKSTREAM_PATH}'
  - id: 'download prometheus jmx agent'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'curl'
    args: ['https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.15.0/jmx_prometheus_javaagent-0.15.0.jar', '-O']
    dir: '${_WORKSTREAM_PATH}'
  - id: 'build looker image'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          minor_version=$(cat minor_version.txt)
          docker build -t ${_REGISTRY_PATH}/${_IMAGE_NAME} -t ${_REGISTRY_PATH}/${_IMAGE_NAME}:${_LOOKER_VERSION} -t ${_REGISTRY_PATH}/${_IMAGE_NAME}:$$minor_version . 
    dir: '${_WORKSTREAM_PATH}'
  - id: 'push looker image'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          minor_version=$(cat minor_version.txt)
          docker push ${_REGISTRY_PATH}/${_IMAGE_NAME}:$$minor_version 
          if [[ $(cat latest_tag.txt) -eq 1 ]]
          then
            docker push ${_REGISTRY_PATH}/${_IMAGE_NAME}
          fi
    dir: '${_WORKSTREAM_PATH}'
substitutions:
  _LOOKER_LICENSE_KEY_SECRET: 'looker_license_key'
  _LOOKER_TECHNICAL_CONTACT_EMAIL: '<email>'
  _LOOKER_VERSION: ''
  _WORKSTREAM_PATH: './'
  _REGISTRY_PATH: '<registry-path>'
  _IMAGE_NAME: 'looker'
availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/${_LOOKER_LICENSE_KEY_SECRET}/versions/latest
      env: LOOKER_LICENSE_KEY
images:
  - '${_REGISTRY_PATH}/${_IMAGE_NAME}:${_LOOKER_VERSION}'
